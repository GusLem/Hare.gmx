<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cronometro
tempo = 0;
global.T = 0;
global.cronometra = false;

segundos = floor(tempo) % 60;
    if segundos &lt; 10{segundos = "0" + string(segundos)}
minutos = floor(tempo/60);
    if minutos &lt; 10{minutos = "0" + string(minutos)}
milesimos = floor((tempo - floor(tempo))*100);
    if milesimos &lt; 10{milesimos = "0" + string(milesimos)}

    
    salvaTempo = false;
ini_open("save.ini");
    best = ini_read_real("val","tempo",99999999999999);
ini_close();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>morre = false;
ini_open("save.ini");
    distanciaMax = ini_read_real("val","distancia",0);
ini_close();

/*
pontuacao = 0;
pontuacaoCont = 0;
pontuacaoAdd = 0;
*/
desligaCronometro = 0;
lm=0;
vm = 0;
madd = false;

imgUlt = 0;
imgUltMax = sprite_get_number(spr_ult);
imgUltCarrega = 0;
imgUltCarregaMax = sprite_get_number(spr_ult_carrega)-1;
cadd = 0.15;
highscore = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Tempo
if (global.cronometra){
    tempo+=delta_time/1000000;
}
segundos = floor(tempo) % 60;
    if segundos &lt; 10{segundos = "0" + string(segundos)}
minutos = floor(tempo/60);
    if minutos &lt; 10{minutos = "0" + string(minutos)}
milesimos = floor((tempo - floor(tempo))*100);
    if milesimos &lt; 10{milesimos = "0" + string(milesimos)}

    
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Desenha Cronômetro    
w = display_get_gui_width();
h = display_get_gui_height();
    
if instance_exists(obj_jogo_hardcore){
    if (global.cronometra) || (ceil(current_time/250)%2==0){  
        var corCro = c_white;
        if (!global.cronometra) &amp;&amp; (tempo &gt; 0){corCro=(c_lime);desligaCronometro++;}
        if (desligaCronometro &lt; 240){
            desenha_texto_ext(w*0.5,h*0.01,string(minutos)+ ":" + string(segundos) + ":" + string(milesimos),0.5,0,corCro);
        } else {
            if (!salvaTempo){
                global.T = string(minutos)+ ":" + string(segundos) + ":" + string(milesimos);
                salvaTempo = true;
                if (tempo &lt; best){ 
                    ini_open("save.ini");
                         ini_write_real("val","tempo",tempo);
                         ini_write_string("val","cTempo",global.T);
                    ini_close();
                }
            }
        
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Desenha Hud
if morre{image_alpha-=0.1;if image_alpha &lt;= 0{instance_destroy();}}
if  (room == rm_intro){
            if (!os_is_mobile()){ 
                if keyboard_check_pressed(ord('Q')){player_ult();with(obj_texto){instance_destroy();}}
                exit;
            }
}
draw_set_alpha(image_alpha);
    var vidas = max(0,obj_player.vidas);
    
    distancia = player_get_dist();
    moedas = obj_player.moedas;
    
    /////////////   DISTANCIA///////////// 
        desenha_texto_ext(w*0.99,h*0.01,string(distancia) + "m",1,0,c_white);
        
        //////PODE COMENTAR//////
            //desenha_texto_ext(w/2,h*0.01,"FPS: " + string(fps),0.5,0,c_white);
        //////PODE COMENTAR//////
    /////////////   PONTUAÇÃO   DINHEIRO    DISTANCIA///////////// 
    
    
    ////////////VIDAS///////////
        if (vidas &gt; 0){
            lw = w*0.03;
            draw_sprite_ext(spr_lives,0,w*0.02,h*0.03,lw/32,lw/32,0,c_white,1);
            desenha_texto_ext(w*0.02,h*0.01," ." + string(vidas),0,0,c_white);
        }
    ///////////VIDAS////////////
    
    
    ///////////////ULT/////////////////////
        
    if (!instance_exists(Boss)){
        lx = w*0.5;
        ly = h*0.9;
        lw = w*0.03;
        lw2 = w*0.01;
        var vm = (moedas - lm)/20;
        if (abs(vm) &lt; 1){vm = moedas - lm;}
        lm+=vm;
        if (moedas &lt; 300){ 
            lm = min(moedas,300)/300;
            var img = lm*(sprite_get_number(spr_ult_carrega_setas)-1);
            draw_sprite_ext(spr_ult_carrega,imgUlt,w/2,ly,lw/32,lw/32,0,c_white,1);
            draw_sprite_ext(spr_ult_carrega_setas,img,w/2,ly,lw/32,lw/32,0,c_white,1);
            imgUlt+=0.2;
            if (imgUlt &gt; sprite_get_number(spr_ult_carrega)-1){imgUlt = 0;}
        }else{
            draw_sprite_ext(spr_ult,imgUlt,w/2,ly,lw/32,lw/32,0,c_white,1);
            imgUlt+=0.2;
            if (imgUlt &gt; imgUltMax){imgUlt = 0;}
            
                if (point_distance(mouse_x-view_xview,mouse_y-view_yview,w/2,ly) &lt; lw*1.5){
                    mouse_mira();
                    if mouse_check_button_pressed(mb_left){player_ult();}
                }
            
            if keyboard_check_pressed(ord('Q')){player_ult();}
            
        }
    }
    ///////////////ULT/////////////////////
draw_set_alpha(1);
draw_set_colour(c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
