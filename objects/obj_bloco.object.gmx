<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bloco</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>self</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tipo = 0;


muda = false;
image_speed = 0;

alarm[0] = 1;


surf = -1;

ptx = 0;
pty = 0;

eptx = 0;
epty = 0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_free(surf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0);
if visible{
    event_user(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Tipo e caso de destruicao

passou_deleta();

switch(tipo){
    case 1://Chao cai
        if !muda{
            if place_meeting(x,y-1,obj_player){muda = true; vy = 0;sfx_toca(sfx_earthquake);}
        } else {
        
            vy=2;
            y+=vy;
            with(obj_player){
                if (x &lt; other.x + other.sprite_width) &amp;&amp; (x &gt; other.x){
                    if Estado = 0{movimenta_y(other.vy*2);}
                }
            }
            with(obj_moeda){
                if (x &lt; other.x + other.sprite_width) &amp;&amp; (x &gt; other.x){
                    y+=other.vy;
                }
            }
        }
    break;
    
    case 2://chao levanta
        if !muda{
            if place_meeting(x,y-1,obj_player){muda = true; vy = 0;;sfx_toca(sfx_earthquake);}
        } else if (y &gt; -700){
            vy=-3;
            y+=vy;
            with(obj_player){
                if place_meeting(x,y+5,other){y+=other.vy;}
            }
            
            with(obj_moeda){
                if (x &lt; other.x + other.sprite_width) &amp;&amp; (x &gt; other.x){
                    y+=other.vy;
                }
            }
        }
    break;

    case 3://esteira
        with(obj_player){
            if (Estado != 0){break;}
            if place_meeting(x+32,y+1,other)&amp;&amp;place_meeting(x-32,y+1,other){
                x-=8;       
            }
        }
    break;

    case 4://esteira inversa
        with(obj_player){
            if (Estado != 0){break;}
            if place_meeting(x+32,y+1,other)&amp;&amp;place_meeting(x-32,y+1,other){
                x+=8;
            }
        }
    break;
    
    case 8:
    break;
    

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Scree shake
if (muda) &amp;&amp; (x+sprite_width &gt; view_xview){

    if (tipo == 1) || (tipo == 2){screen_shake();}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Prepara Surface
if (tipo == 3 || tipo == 4 || (object_index == obj_bloco_segue)){event_user(1); exit;}
if !surface_exists(surf) {
    surface_free(surf);
    
    var spr = get_spr_bloco();
    
    if tipo==2{
        image_yscale = 850/32;
    }
    
    surf = surface_create(sprite_width,sprite_height);
    var w = surface_get_width(surf);
    var h = surface_get_height(surf);
    var sw = sprite_get_width(spr);
    var sh = sprite_get_height(spr);
    var cor = c_white;
    
    draw_set_colour(c_white);
    texture_set_repeat(true);
    surface_set_target(surf);   
        draw_set_blend_mode(bm_subtract);
            draw_rectangle(0,0,w,h,false);    
        draw_set_blend_mode(bm_normal);
        
        if (tipo == 3 || tipo == 4){
            tex = sprite_get_texture(spr_esteira,0);
            tw = texture_get_texel_width(tex)*(w-10*2);
            th = texture_get_texel_height(tex)*32;
            if tipo == 3{eptx+=0.0625;}
            if tipo == 4{eptx+=0.0625;tw*=-1;}
            draw_primitive_begin_texture(pr_trianglestrip,tex);
                draw_vertex_texture(10,1,eptx+ptx,0);
                draw_vertex_texture(w-10,1,eptx+tw+ptx,0);
                draw_vertex_texture(10,32,eptx+ptx,th);
                draw_vertex_texture(w-10,32,eptx+tw+ptx,th);
            draw_primitive_end();   
        }
    
    
        //desenha fundo
        var tex = sprite_get_texture(spr,3);
        var tw = texture_get_texel_width(tex)*(w-sw*2);
        var th = texture_get_texel_height(tex)*(h-sh);
        draw_primitive_begin_texture(pr_trianglestrip,tex);
            draw_vertex_texture(sw,sh,+ptx,0);
            draw_vertex_texture(w-sw,sh,tw+ptx,0);
            draw_vertex_texture(sw,h,+ptx,th);
            draw_vertex_texture(w-sw,h,tw+ptx,th);
        draw_primitive_end();    
        
        
        //desenha parte de cima
        
        tex = sprite_get_texture(spr,1);
        tw = texture_get_texel_width(tex)*(w-sw*2);
        th = texture_get_texel_height(tex)*sh;
        draw_primitive_begin_texture(pr_trianglestrip,tex);
            draw_vertex_texture(sw,0,ptx,0);
            draw_vertex_texture(w-sw,0,tw+ptx,0);
            draw_vertex_texture(sw,sh,ptx,th);
            draw_vertex_texture(w-sw,sh,tw+ptx,th);
        draw_primitive_end();    
        
        
        //desenha canto &lt;&lt;&lt;
        tex = sprite_get_texture(spr,2);
        tw = texture_get_texel_width(tex)*sw;
        th = texture_get_texel_height(tex)*(h-sh);
        draw_primitive_begin_texture(pr_trianglestrip,tex);
            draw_vertex_texture(0,sh,0,0);
            draw_vertex_texture(sw,sh,tw,0);
            draw_vertex_texture(0,h,0,th);
            draw_vertex_texture(sw,h,tw,th);
        draw_primitive_end();   
        
        //desenha canto &gt;&gt;&gt;
        tex = sprite_get_texture(spr,2);
        tw = texture_get_texel_width(tex)*sw;
        th = texture_get_texel_height(tex)*(h-sh);
        draw_primitive_begin_texture(pr_trianglestrip,tex);
            draw_vertex_texture(w-sw-4,sh,tw,0);
            draw_vertex_texture(w-4,sh,0,0);
            draw_vertex_texture(w-sw-4,h,tw,th);
            draw_vertex_texture(w-4,h,0,th);
        draw_primitive_end();    
        
        //desenha cantos cantos
        draw_sprite_ext(spr,0,0,0,1,1,0,cor,1);
        draw_sprite_ext(spr,0,w-4,0,-1,1,0,cor,1);
        
        
    surface_reset_target();
        texture_set_repeat(false);
}  
///Desenha
draw_surface(surf,x,y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///No Surg

var spr = get_spr_bloco();

if tipo==2{
    image_yscale = 850/32;
}

var w = sprite_width;
var h = sprite_height;
var sw = sprite_get_width(spr);
var sh = sprite_get_height(spr);

var cor = c_white;
draw_set_colour(cor);
texture_set_repeat(true);  

    
    if (tipo == 3 || tipo == 4){
        tex = sprite_get_texture(spr_esteira,0);
        tw = texture_get_texel_width(tex)*(w-10*2);
        th = texture_get_texel_height(tex)*32;
        if tipo == 3{eptx+=0.0625;}
        if tipo == 4{eptx+=0.0625;tw*=-1;}
        draw_primitive_begin_texture(pr_trianglestrip,tex);
            draw_vertex_texture(x+10,y+1,eptx+ptx,0);
            draw_vertex_texture(x+w-10,y+1,eptx+tw+ptx,0);
            draw_vertex_texture(x+10,y+32,eptx+ptx,th);
            draw_vertex_texture(x+w-10,y+32,eptx+tw+ptx,th);
        draw_primitive_end();   
    }


    //desenha fundo
    var tex = sprite_get_texture(spr,3);
    var tw = texture_get_texel_width(tex)*(w-sw*2);
    var th = texture_get_texel_height(tex)*(h-sh);
    draw_primitive_begin_texture(pr_trianglestrip,tex);
        draw_vertex_texture(x+sw,y+sh,+ptx,0);
        draw_vertex_texture(x+w-sw,y+sh,tw+ptx,0);
        draw_vertex_texture(x+sw,y+h,+ptx,th);
        draw_vertex_texture(x+w-sw,y+h,tw+ptx,th);
    draw_primitive_end();    
    
    
    //desenha parte de cima
    
    tex = sprite_get_texture(spr,1);
    tw = texture_get_texel_width(tex)*(w-sw*2);
    th = texture_get_texel_height(tex)*sh;
    draw_primitive_begin_texture(pr_trianglestrip,tex);
        draw_vertex_texture(x+sw,y+0,ptx,0);
        draw_vertex_texture(x+w-sw,y+0,tw+ptx,0);
        draw_vertex_texture(x+sw,y+sh,ptx,th);
        draw_vertex_texture(x+w-sw,y+sh,tw+ptx,th);
    draw_primitive_end();    
    
    
    //desenha canto &lt;&lt;&lt;
    tex = sprite_get_texture(spr,2);
    tw = texture_get_texel_width(tex)*sw;
    th = texture_get_texel_height(tex)*(h-sh);
    draw_primitive_begin_texture(pr_trianglestrip,tex);
        draw_vertex_texture(x+0,y+sh,0,0);
        draw_vertex_texture(x+sw,y+sh,tw,0);
        draw_vertex_texture(x+0,y+h,0,th);
        draw_vertex_texture(x+sw,y+h,tw,th);
    draw_primitive_end();   
    
    //desenha canto &gt;&gt;&gt;
    tex = sprite_get_texture(spr,2);
    tw = texture_get_texel_width(tex)*sw;
    th = texture_get_texel_height(tex)*(h-sh);
    draw_primitive_begin_texture(pr_trianglestrip,tex);
        draw_vertex_texture(x+w-sw-4,y+sh,tw,0);
        draw_vertex_texture(x+w-4,y+sh,0,0);
        draw_vertex_texture(x+w-sw-4,y+h,tw,th);
        draw_vertex_texture(x+w-4,y+h,0,th);
    draw_primitive_end();    
    
    //desenha cantos cantos
    draw_sprite_ext(spr,0,x,y,1,1,0,cor,1);
    draw_sprite_ext(spr,0,x+w-4,y,-1,1,0,cor,1);
    
    texture_set_repeat(false);
   
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (image_index == 5){
    var cria = instance_create(x,y,obj_bounce);
    cria.xmin = x;
    cria.xmax = x+sprite_width;
    visible = false;
    y+=10000;
}

if (image_index == 6){
    image_xscale = max(image_xscale,1000/sprite_get_width(sprite_index));
    var xx = x+100;
    var yp = y;
    var yy = y;
    var rand = gcl_irandom_range(-4,4);
    while(xx &lt; x+sprite_width){
        var cria = instance_create(xx,yy,obj_barril);
        xx+=gcl_irandom_range(300,600);
        rand = clamp(rand+gcl_irandom_range(-4,4),-4,4);
        yy=clamp(yp+rand*64,-800,64);
    }
    visible = false;
    y+=10000;
}

if (image_index == 7){
    var xx = x;
    var cria = instance_create(xx,y - 100,obj_zipline);
    cria.tam = sprite_width;
    
    visible = false;
    y+=10000;
}

if (image_index == 8){
    if (player_esta_ultando() || player_esta_morto()){
        exit;
    }
    image_xscale = gcl_irandom_range(600,2000)/32;
    var cria = instance_create(x,y,obj_bloco_teto_fase);
    cria.image_xscale = image_xscale;
    visible = false;
    y+=10000;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if visible{
    if (os_browser == browser_firefox){event_user(2);}else{event_user(1)}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
